version: '3'

services:

 # ---------------------------------
 # laravel
 # ---------------------------------
 app:
   # どのポートを開いて繋ぐか。下記はコンテナの80番ポートを開いて、ホストの80番につなぐ
   ports:
     - "93:80"
   # 先ほど作ったDockerfileを使って、コンテナをビルドするという指定
   build: ./docker/app
   # コンテナの名前を指定
   container_name: sentiment_app
   # ローカルのディレクトリとコンテナ上のディレクトリのリンクを設定
   # ./src は docker-composer.yml のディレクトリ直下にある src を設定している
   # コンテナが作成されると src ディレクトリからコンテナの /var/www/html にアクセスすることができる
   volumes:
     - ./src:/var/www/html

# ----------------------------------
# MySQL
# ----------------------------------
 db:
   # Docker HubからMySQL5.7の公式イメージをダウンロードしてくる指定
   image: mysql:8.0.31
   container_name: sentiment_db

   # コンテナ内の環境変数を指定。環境変数を渡すとビルド時に設定してくれるDockerイメージがあるので、利用の際はDocker Hubのサイトで確認する
   environment:
      MYSQL_TCP_PORT: 3313
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      TZ: 'Asia/Tokyo'

   # 起動時のコマンド
   command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
   # ディレクトリ同期。設定ファイルとMySQLのデータが保存される場所を同期している。コンテナは基本的に起動時に変更されてもコンテナ自体が止まるとデータが消えてしまうため、保存しておきたいものはホストマシンと同期しておく必要がある。
   volumes:
     - ./docker/db/data:/var/lib/mysql
     - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
   ports:
     - 3313:3306

# ----------------------------------
# phpMyAdminを動かすコンテナ
# ----------------------------------
 phpmyadmin:
  # Docker Hubからイメージをダウンロード
  image: phpmyadmin/phpmyadmin:5.2.0

  # コンテナの名前
  container_name: sentiment_phpmyadmin

  # コンテナと他のサービスを繋げる
  links:
     - db

  # localhost:4013 で phpmyadmin の管理画面にアクセス
  ports:
     - 4013:80

  # セッション情報をボリュームに設定して永続化
  volumes:
     - ./docker/phpmyadmin/sessions:/sessions

  environment:
    - PMA_HOST=db:3313
    - PMA_ARBITRARY=1
      - PMA_HOST=db
      - PMA_USER=root
      - PMA_PASSWORD=root